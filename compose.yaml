---
services:
  app:
    build: .
    restart: unless-stopped
    cpus: 2
    mem_limit: 512m
    env_file:
    - .env
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/todo
      DATABASE_POOLSIZE: 10
      REDIS_HOST: valkey
    ports:
    - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      valkey:
        condition: service_healthy
      dbmate:
        condition: service_completed_successfully

  dbmate:
    image: ghcr.io/amacneil/dbmate:2.27
    command: --wait --wait-timeout 10s migrate --strict --verbose
    environment:
      DATABASE_URL: postgresql://db:5432/todo?sslmode=disable
      PGUSER: postgres
      PGPASSWORD: admin
    volumes:
    - ./db:/db
    depends_on:
    - db

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
    ports:
    - "5432:5432"
    volumes:
    - ./db/dev/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    - db_data:/var/lib/postgresql/data

  valkey:
    image: valkey/valkey:8.1-alpine
    restart: unless-stopped
    environment:
      VALKEY_EXTRA_FLAGS: --requirepass valkey
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli -a valkey ping | grep PONG"]
      interval: 1s
    ports:
    - "6379:6379"
    volumes:
    - valkey_data:/data

volumes:
  db_data:
  valkey_data:
