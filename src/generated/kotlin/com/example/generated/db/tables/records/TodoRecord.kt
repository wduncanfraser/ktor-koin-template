/*
 * This file is generated by jOOQ.
 */
package com.example.generated.db.tables.records


import com.example.generated.db.tables.Todo

import java.time.Instant
import java.util.UUID

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * Temporary table to verify integration test functionality. Delete before
 * deploying to a real environment.
 */
@Suppress("warnings")
open class TodoRecord() : UpdatableRecordImpl<TodoRecord>(Todo.TODO) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var completedAt: Instant?
        set(value): Unit = set(2, value)
        get(): Instant? = get(2) as Instant?

    open var createdAt: Instant?
        set(value): Unit = set(3, value)
        get(): Instant? = get(3) as Instant?

    open var modifiedAt: Instant?
        set(value): Unit = set(4, value)
        get(): Instant? = get(4) as Instant?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised TodoRecord
     */
    constructor(id: UUID? = null, name: String? = null, completedAt: Instant? = null, createdAt: Instant? = null, modifiedAt: Instant? = null): this() {
        this.id = id
        this.name = name
        this.completedAt = completedAt
        this.createdAt = createdAt
        this.modifiedAt = modifiedAt
        resetTouchedOnNotNull()
    }
}
